"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const node_fetch_1 = require("node-fetch");
const json = (res) => res.json();
class NovelCovid {
    constructor() {
        this.baseURL = 'https://corona.lmao.ninja';
    }
    /**
     * @description Gets all the information from the api.
     * @returns {Promise<All>}
     */
    async all() {
        return node_fetch_1.default(`${this.baseURL}/all`).then(json);
    }
    async countries(country, sort) {
        if (country) {
            return node_fetch_1.default(`${this.baseURL}/countries/${country}`).then(json);
        }
        else if (sort) {
            return node_fetch_1.default(`${this.baseURL}/countries?${sort}`).then(json);
        }
        return node_fetch_1.default(`${this.baseURL}/countries`).then(json);
    }
    async states(state) {
        if (state) {
            return node_fetch_1.default(`${this.baseURL}/states/${state}`).then(json);
        }
        return node_fetch_1.default(`${this.baseURL}/states`).then(json);
    }
    async histroical(all, country, province) {
        if (country) {
            return node_fetch_1.default(`${this.baseURL}/v2/historical/${country}`).then(json);
        }
        else if (country && province) {
            return node_fetch_1.default(`${this.baseURL}/v2/historical/${country}/${province}`).then(json);
        }
        else if (all) {
            return node_fetch_1.default(`${this.baseURL}/v2/historical/all`).then(json);
        }
        return node_fetch_1.default(`${this.baseURL}/v2/historical`).then(json);
    }
    /**
     * @description Return data from the John Hopkins CSSE Data Repository (Provinces and such).
     * @returns {Promise<Array<Jhucsse>>}
     */
    async jhucsse() {
        return node_fetch_1.default(`${this.baseURL}/v2/jhucsse`).then(json);
    }
}
exports.NovelCovid = NovelCovid;
